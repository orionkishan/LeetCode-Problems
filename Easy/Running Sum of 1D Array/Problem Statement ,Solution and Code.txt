/*Problem Statement:
Given an array nums. 
We define a running sum of an array as runningSum[i] = sum(nums[0]â€¦nums[i]).

Return the running sum of nums.

Example 1:

Input: nums = [1,2,3,4]
Output: [1,3,6,10]
Explanation: Running sum is obtained as follows: [1, 1+2, 1+2+3, 1+2+3+4].*/




/*Solution:
We need to return an array with running sum stored stored in it
So Firstly we create a vector
and variable sum=0
and iterate form 0 to size of array given and add array element to sum
and we push back the sum in vector.
There can be other solutions too
*/





//C++ Code:
class Solution {
public:
    vector<int> runningSum(vector<int>& nums) {
        vector <int> rsum;
        int sum=0;
        for(int i=0;i<nums.size();i++)
        {   
            sum=sum+nums[i];
            rsum.push_back(sum);
        }
        return rsum;
    }
};